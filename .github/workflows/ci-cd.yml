name: CI/CD - Build, Testes e Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Instalar dependências
        run: |
          pip install -r requirements.txt \
                      ruff pylint mypy bandit pip-audit black pytest

      - name: Verificação de formatação com Black
        run: black --color ./app

      - name: Lint com Ruff
        run: ruff check ./app

      - name: Análise de código com Pylint
        run: pylint app

      - name: Verificação de tipagem com mypy
        run: mypy ./app

      - name: Análise de segurança com Bandit
        run: bandit -r ./app

      - name: Auditoria de dependências com pip-audit
        run: pip-audit

      - name: Executar testes unitários
        run: pytest -q
        env:
          PYTHONPATH: ./app

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy via SSH na VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_KEY }}
          script: |
            cd ~/CI-CD-tutorial-completo
            git pull origin main
            docker compose down
            docker compose up -d
      
      - name: Security Scan com OWASP ZAP
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://${{ secrets.VM_IP }}:8000'
          fail_action: false